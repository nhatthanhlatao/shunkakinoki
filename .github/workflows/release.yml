name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-
      - name: Install dependencies with yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: Release
        run: |
          yarn run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore yarn.lock
        run: |
          git restore yarn.lock
      - name: Refactor Cargo.toml
        run: |
          version=$(node -pe "require('./package.json').version")
          sed -i -e "s/^version = .*/version = \"$version\"/" Cargo.toml
      - name: Create a pull request if updated
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
        env:
          HUSKY_SKIP_HOOKS: 1
  rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache cargo
        id: cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-
      - uses: actions-rs/cargo@v1
      - name: Install rust dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          rustup component add clippy
          cargo update
      - name: Run cargo login
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_IO_TOKEN }}
      - name: Run cargo publish
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: publish
